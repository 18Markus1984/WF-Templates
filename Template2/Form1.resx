<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIABEBAAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgDAAAAa6xYVAAAAXFQ
        TFRFLjNJLjJJLjJILj1PMIJ4MJeFMJaEMJWDMJGBMIV6Lj9QLkVUMcGeMuW0MuOzMuGxMtmsMcWgLkhW
        McCdMuSzMuKyMuCxMtisMcSgLkhVMcCeLkRTMbaXMdaqMdSpMdWqMdCnMbiZMbaYMbeYMciiMbqaLkdV
        Mb2cMt+wMceiLjtOLjxOLkZUMbybMcmjLkBRMb2bMcijLj5PLjNILDhSKT5dKT1cKT1dLDZPG1mQBYjm
        BYflB4TgIU57LzJHGV6ZAJP7AJP6AY/0H1GCLzJGGV6YAJL6AJL5Ao7yH1GBLzFGJkNnFmSkFWanFWao
        I0pzH1KCAZD1AJT8AJP8Ao7zGV+aAJT9AZD2Ao/zIkt1FGirJkRoIE9+BInoA43vA4zuGluTJ0JlJkNm
        KzpWLjFIMt2vL1FbLk9aMb6dMd2vMcylMcukMcqkMdOpMuGyMcKfMt6wMd6wMtyuLjhML1xiL2doL2Zo
        L2ZnL2RmL15iLjlNM4j+MwAAAo5JREFUeNrt3NdW1EAAgOFsEFRAFnETFAXsgFLUxa4gilhRxN6wYW9r
        w/L0wq2ezY3xyMTvf4Ccme9MJnOTiSJJkiRJkiRJkiRJkiRFpTi8SkuDLuUz/YYVjU3BtXJVU1Pj6uY4
        B4C4pXVNW3CV29va1qztyAdgXSUJrrQzSSrrNwDIBaBrCaASVkl7fgAbN3X39G7esjWotm3v7enesTOf
        FdBX7i8PdOzaHVKDQ+X+tDW/V6AyPLL4aQ2nuGFPJddNsLJ3pBTU2W0fAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAsgGoZv8BUnyA0f0H6nfwwKGiA1QPHzlavyPHjo8VHWD8
        xET9Tpw8NVl0gNNTZ+o3dfYcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACwr
        gOrk+aziogPEFy5OZ3TpcrXgAJMzV2av1m92PC46wKlrmTM6DQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKBgAPH1G1ndnAkP
        4NbEVP0mflsBt+9kNX03Dg3g3v25B/Wbe/jr0OLMW3fOV6PAAKLRR4+zehL91ZbDRUpjmcWFB/i3AQAA
        AAAAAAAAAAAAAAAAAAD+EKBr8VnDzfNxQM035Akw1P+0f+BZy2BAtTxfGnRXTgAvkjR9+ep1UL15m6bv
        3uf3CiRJJazK7Umum2BwpZ1Jrpvg/w3Ql9ZqH2ph9bG3VktbcwGIPn3+shBcX78tLHz5/iOfU8V8sEWS
        JEmSJEmSJEmSJEmKfgL67dMPLlJvwgAAAABJRU5ErkJggg==
</value>
  </data>
</root>